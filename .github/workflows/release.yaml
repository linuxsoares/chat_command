name: Auto Tag and Release

on:
  push:
    branches:
      - main

jobs:
  auto-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Get latest tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Test authenticated access
        run: |
          git ls-remote https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN_CHAT_COMMAND }}

      - name: Bump version and tag
        id: bump_tag
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN_CHAT_COMMAND }}
        run: |
          OLD_TAG=${{ steps.get_tag.outputs.tag }}
          VERSION=${OLD_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          PATCH=$((PATCH + 1))
          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          echo "New tag: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

          git tag "$NEW_TAG"

          # ✅ Token visível só aqui via env (sem mascarar)
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}
          git push origin "$NEW_TAG"

      - name: Build binary
        run: |
          mkdir -p dist
          go build -o dist/chat_command .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump_tag.outputs.new_tag }}
          files: dist/chat_command
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN_CHAT_COMMAND }}
